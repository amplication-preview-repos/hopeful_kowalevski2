/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumContentContentType } from "./EnumContentContentType";
import {
  IsEnum,
  IsOptional,
  IsString,
  MaxLength,
  ValidateNested,
  IsDate,
} from "class-validator";
import { DmcaRequestUpdateManyWithoutContentsInput } from "./DmcaRequestUpdateManyWithoutContentsInput";
import { Type } from "class-transformer";
import { IsJSONValue } from "../../validators";
import { GraphQLJSON } from "graphql-type-json";
import { InputJsonValue } from "../../types";
import { LogUpdateManyWithoutContentsInput } from "./LogUpdateManyWithoutContentsInput";
import { PlatformWhereUniqueInput } from "../../platform/base/PlatformWhereUniqueInput";

@InputType()
class ContentUpdateInput {
  @ApiProperty({
    required: false,
    enum: EnumContentContentType,
  })
  @IsEnum(EnumContentContentType)
  @IsOptional()
  @Field(() => EnumContentContentType, {
    nullable: true,
  })
  contentType?: "Option1" | null;

  @ApiProperty({
    required: false,
    type: String,
  })
  @IsString()
  @MaxLength(1000)
  @IsOptional()
  @Field(() => String, {
    nullable: true,
  })
  contentUrl?: string | null;

  @ApiProperty({
    required: false,
    type: () => DmcaRequestUpdateManyWithoutContentsInput,
  })
  @ValidateNested()
  @Type(() => DmcaRequestUpdateManyWithoutContentsInput)
  @IsOptional()
  @Field(() => DmcaRequestUpdateManyWithoutContentsInput, {
    nullable: true,
  })
  dmcaRequests?: DmcaRequestUpdateManyWithoutContentsInput;

  @ApiProperty({
    required: false,
  })
  @IsJSONValue()
  @IsOptional()
  @Field(() => GraphQLJSON, {
    nullable: true,
  })
  fingerprint?: InputJsonValue;

  @ApiProperty({
    required: false,
  })
  @IsDate()
  @Type(() => Date)
  @IsOptional()
  @Field(() => Date, {
    nullable: true,
  })
  foundAt?: Date | null;

  @ApiProperty({
    required: false,
    type: () => LogUpdateManyWithoutContentsInput,
  })
  @ValidateNested()
  @Type(() => LogUpdateManyWithoutContentsInput)
  @IsOptional()
  @Field(() => LogUpdateManyWithoutContentsInput, {
    nullable: true,
  })
  logs?: LogUpdateManyWithoutContentsInput;

  @ApiProperty({
    required: false,
    type: () => PlatformWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PlatformWhereUniqueInput)
  @IsOptional()
  @Field(() => PlatformWhereUniqueInput, {
    nullable: true,
  })
  platform?: PlatformWhereUniqueInput | null;
}

export { ContentUpdateInput as ContentUpdateInput };
