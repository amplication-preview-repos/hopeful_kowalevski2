/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { InputType, Field } from "@nestjs/graphql";
import { ApiProperty } from "@nestjs/swagger";
import { EnumContentContentType } from "./EnumContentContentType";
import { IsEnum, IsOptional, ValidateNested } from "class-validator";
import { StringNullableFilter } from "../../util/StringNullableFilter";
import { Type } from "class-transformer";
import { DmcaRequestListRelationFilter } from "../../dmcaRequest/base/DmcaRequestListRelationFilter";
import { JsonFilter } from "../../util/JsonFilter";
import { DateTimeNullableFilter } from "../../util/DateTimeNullableFilter";
import { StringFilter } from "../../util/StringFilter";
import { LogListRelationFilter } from "../../log/base/LogListRelationFilter";
import { PlatformWhereUniqueInput } from "../../platform/base/PlatformWhereUniqueInput";

@InputType()
class ContentWhereInput {
  @ApiProperty({
    required: false,
    enum: EnumContentContentType,
  })
  @IsEnum(EnumContentContentType)
  @IsOptional()
  @Field(() => EnumContentContentType, {
    nullable: true,
  })
  contentType?: "Option1";

  @ApiProperty({
    required: false,
    type: StringNullableFilter,
  })
  @Type(() => StringNullableFilter)
  @IsOptional()
  @Field(() => StringNullableFilter, {
    nullable: true,
  })
  contentUrl?: StringNullableFilter;

  @ApiProperty({
    required: false,
    type: () => DmcaRequestListRelationFilter,
  })
  @ValidateNested()
  @Type(() => DmcaRequestListRelationFilter)
  @IsOptional()
  @Field(() => DmcaRequestListRelationFilter, {
    nullable: true,
  })
  dmcaRequests?: DmcaRequestListRelationFilter;

  @ApiProperty({
    required: false,
    type: JsonFilter,
  })
  @Type(() => JsonFilter)
  @IsOptional()
  @Field(() => JsonFilter, {
    nullable: true,
  })
  fingerprint?: JsonFilter;

  @ApiProperty({
    required: false,
    type: DateTimeNullableFilter,
  })
  @Type(() => DateTimeNullableFilter)
  @IsOptional()
  @Field(() => DateTimeNullableFilter, {
    nullable: true,
  })
  foundAt?: DateTimeNullableFilter;

  @ApiProperty({
    required: false,
    type: StringFilter,
  })
  @Type(() => StringFilter)
  @IsOptional()
  @Field(() => StringFilter, {
    nullable: true,
  })
  id?: StringFilter;

  @ApiProperty({
    required: false,
    type: () => LogListRelationFilter,
  })
  @ValidateNested()
  @Type(() => LogListRelationFilter)
  @IsOptional()
  @Field(() => LogListRelationFilter, {
    nullable: true,
  })
  logs?: LogListRelationFilter;

  @ApiProperty({
    required: false,
    type: () => PlatformWhereUniqueInput,
  })
  @ValidateNested()
  @Type(() => PlatformWhereUniqueInput)
  @IsOptional()
  @Field(() => PlatformWhereUniqueInput, {
    nullable: true,
  })
  platform?: PlatformWhereUniqueInput;
}

export { ContentWhereInput as ContentWhereInput };
